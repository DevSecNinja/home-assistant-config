substitutions:
  mhz19b_pin_tx: GPIO3 # 6 Make sure this is a UART port & reversed RX/TX - see pinout scheme
  mhz19b_pin_rx: GPIO1 # 7 Make sure this is a UART port & reversed RX/TX - see pinout scheme

uart:
  - id: "${device_id}_uart"
    rx_pin: ${mhz19b_pin_tx}
    tx_pin: ${mhz19b_pin_rx}
    baud_rate: 9600
    # debug:

sensor:
  - <<: !include ../sensors/mhz19b.yaml

text_sensor:
  - <<: !include ../text_sensors/co2_air_quality.yaml

select:
  - <<: !include ../select/uart.yaml

logger:
    # Disable UART Logging as we need it for the RX/TX
    baud_rate: 0
    # Uncomment when debugging UART
    # level: VERY_VERBOSE

# Source: koenvervloesem/ESPHome-Air-Quality-Monitor/blob/main/common/mh-z19b.yaml
# MIT License - Copyright (c) 2021 Koen Vervloesem
# See for full license, modules/aqi.yaml

# Show the user whether the sensor has been calibrated yet
binary_sensor:
  - <<: !include ../binary_sensors/co2_problem_indicator.yaml
  - platform: template
    name: "CO₂ sensor calibrated"
    id: "${device_id}_co2_calibrated"
    # on_press:
    #   then:
    #     - switch.turn_on: show_calibrating
    # on_release:
    #   then:
    #     - switch.turn_off: show_calibrating

# The sensor starts in an uncalibrated state after boot
esphome:
  on_boot:
    priority: 500
    then:
      - binary_sensor.template.publish:
          id: "${device_id}_co2_calibrated"
          state: OFF

# Warn when the calibration interval has passed.
interval:
  - interval: ${mhz19b_calibration_interval}
    then:
      - binary_sensor.template.publish:
          id: "${device_id}_co2_calibrated"
          state: OFF

# Switch to calibrate the sensor from within Home Assistant.
switch:
  - platform: template
    name: "Calibrate CO₂ sensor"
    id: "${device_id}_co2_calibrate"
    optimistic: true
    on_turn_on:
      then:
        - mhz19.calibrate_zero: "${device_id}_mhz19"
        # - switch.turn_on: show_calibrating
        - delay: 20min
        - switch.turn_off: "${device_id}_co2_calibrate"
        - binary_sensor.template.publish:
            id: "${device_id}_co2_calibrated"
            state: ON
